1 JVM内存空间基本结构
方法区 java堆 Java栈 本地方法栈

2 基本概念
可触及---从根节点可以触及的对象
可复活---引用被释放，但在finalize()前
不可触及--引用被释放且在finalize()后，可以回收
类的finalize()方法只会被调用一次
避免使用finalize

可成为根的对象
  1 栈中引用的对象
  2 方法区中静态成员或者常量引用的对象（全局对象）
  3 jni本地方法栈中引用的对象

3 stop-the-world
java代码停止，native代码可以执行，但不能和jvm交互
造成的原因
  1 gc
  2 dump线程，堆
  3 死锁检查

4 gc算法
引用计算法 （java未采用）
标记-清除（大量对象存活  -老年代采用
标记-压缩（大量对象存活）-老年代采用
复制算法（少量对象存活） -新生代采用

5 gc收集器
串行收集器 新生代复制算法  老年代标记压缩  稳定效率高 停顿时间长
并行收集器 新生代并行 老年代串行（算法同上）
Parallel收集器 新生代并行 老年代可串行可并行 （算法同上）
cms收集器（老年代收集器） 使用标记清除算法，与用户程序并行运行（区别于以上的标记压缩，为了和用户程序并行而不能移动存活的对象）
