1 CAS算法，Compare and Swap
CAS有3个操作数，内存值V，旧的预期值A，要修改的新值B。当且仅当预期值A和内存值V相同时，将内存值V修改为B，否则什么都不做。

CAS会导致“ABA问题”。
线程1准备用CAS将变量的值由A替换为B，
在此之前，线程2将变量的值由A替换为C，又由C替换为A，
然后线程1执行CAS时发现变量的值仍然为A，所以CAS成功。
但实际上这时的现场已经和最初不同了，尽管CAS成功，但可能存在潜藏的问题

各种乐观锁的实现中通常都会用版本戳version来对记录或对象标记，
避免并发操作带来的问题，在Java中，AtomicStampedReference<E>也实现了这个作用，
它通过包装[E,Integer]的元组来对对象标记版本戳stamp，从而避免ABA问题

2 原子操作类
AtomicInteger，AtomicIntegerArray
AtomicLong，AtomicLongArray
AtomicReference
AtomicStampedReference

原子操作类核心方法
compareAndSet()
getAndSet()

3 Amino框架
提供List，Set等集合的无锁实现
LockFreeList,LockFreeVector,LockFreeSet
LockFreeBSTree无锁二叉搜索树
还有图类
内置了Master-Worker模式的实现
