Object.wait() 与Object.notify/notifyAll()都是放在同步代码块中才能够执行的。
如果在执行wait()与notify/notifyAll()之前没有获得相应的对象锁，就会抛出：java.lang.IllegalMonitorStateException异常

ThreadA线程执行lock.wait();这条语句时，释放获得的对象锁lock，并放弃CPU，进入等待队列。
另一个线程执行lock.notify();，会唤醒ThreadA，但是此时它并不立即释放锁，接下来它睡眠了5秒钟(sleep()是不释放锁的，直到同步代码块结束

public class Service {
        public void testMethod(Object lock) {
            try {
                synchronized (lock) {
                    lock.wait();
                }
            } catch (InterruptedException e) {
                e.printStackTrace();
            }
        }

        public void synNotifyMethod(Object lock) {
            try {
                synchronized (lock) {
                    lock.notify();
                    Thread.sleep(5000);
                }
            } catch (InterruptedException e) {
                e.printStackTrace();
            }
        }
